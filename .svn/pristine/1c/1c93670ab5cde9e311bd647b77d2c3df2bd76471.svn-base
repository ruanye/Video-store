{"version":3,"sources":["chengdu-hongbao.scss","tobe/core/_grid.scss","tobe/core/_css3.scss"],"names":[],"mappings":"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","file":"chengdu-hongbao.css","sourcesContent":["$gridPercentSwitch: true;\r\n@import \"tobe/function\";\r\n@mixin font-dpr($fonts-size){\r\n    font-size: $fonts-size;\r\n\r\n    [data-dpr=\"2\"] & {\r\n        font-size: $fonts-size * 2;\r\n    }\r\n\r\n    [data-dpr=\"3\"] & {\r\n        font-size: $fonts-size * 3;\r\n    }\r\n}\r\n.child2{\r\n  float:left;\r\n  width:getPercent(6);\r\n  text-align: center;\r\n  }\r\n* {\r\n  margin:0;padding:0;\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n  -webkit-appearance:none;\r\n}\r\nbutton{border: none;}\r\nbutton:focus{outline: none;}\r\nhtml, body{\r\n  height: 100%;\r\n}\r\n.wrap-page {\r\n    height: 100%;\r\n    padding-bottom:1.09375rem;\r\n    background-origin:content-box; \r\n    -webkit-background-origin:content-box;\r\n  -webkit-overflow-scrolling: touch;\r\n  background:url(../images/b1.png) no-repeat bottom center,#014993 url(../images/chengdu-bg.png) no-repeat top center;\r\n  background-size:100% auto, cover;\r\n  text-align: center;\r\ndisplay: table;table-layout: fixed;width: 100%;\r\n}\r\n.page{display: table-cell;height:100%;width: 100%;vertical-align: middle;}\r\n.inner{margin:0 0.78125rem;\r\n}\r\n.welcome{color: #fff;line-height:1.09375rem;margin-bottom: 0.3125rem;text-shadow:0.0625rem 0.0625rem #9a9a9a;}\r\n.font-1{@include font-dpr(32px);}\r\n.font-2{@include font-dpr(18px);}\r\n.dotted-btn{height:6.75rem;width: 6.609375rem;background:url(../images/dotted-btn.png) no-repeat center;background-size:100% 100%; }\r\n\r\n.dotted-info{@include font-dpr(18px);color: #fff;line-height:0.78125rem;width:3.125rem;background: #fb6a6a;border-radius: 0.078125rem;margin:0.625rem auto;}\r\n.bounceOut{\r\n-webkit-animation:bounceOut 1s .2s ease both;\r\n-moz-animation:bounceOut 1s .2s ease both;}\r\n@-webkit-keyframes bounceOut{\r\n0%{-webkit-transform:scale(1)}\r\n25%{-webkit-transform:scale(.95)}\r\n50%{opacity:1;\r\n-webkit-transform:scale(1.1)}\r\n100%{opacity:0;\r\n-webkit-transform:scale(.3)}\r\n}\r\n@-moz-keyframes bounceOut{\r\n0%{-moz-transform:scale(1)}\r\n25%{-moz-transform:scale(.95)}\r\n50%{opacity:1;\r\n-moz-transform:scale(1.1)}\r\n100%{opacity:0;\r\n-moz-transform:scale(.3)}\r\n}\r\n\r\n.fixed-header{height:1.09375rem;border-bottom:1px solid #275078;position: fixed;top:0;left:0;right:0;line-height:1.09375rem;color: #fff;background: #232d63}\r\n.user-photo{height:0.875rem;width:0.875rem;@include border-radius(0.4375rem);background-size:cover;background-repeat: no-repeat;background-position: center;position: fixed; top:0.125rem; left:0.625rem }\r\n.chengdu-hongbao{width: 3.84375rem;margin:0.3125rem auto}\r\n.row:after,.row:before{    display: table;\r\n    content: \" \";\r\n    clear:both;\r\n     }\r\n.com-btn{@include font-dpr(14px);background: #eb6766;border-radius:0.234375rem;color: #fff;text-align: center;padding:0.078125rem;box-shadow:0 0 0 0.09375rem #eb6766;border:1px dashed #fff;height: 1.0625rem;min-width: 1.75rem}\r\n.chengdu-share{position: fixed;top:0.40625rem;right:0.234375rem;width:2.96875rem}\r\n.info-box-good1{@include font-dpr(14px);background: #3ac0c8;@include border-radius(0.15625rem);color: #fff;text-align: center;padding:0.15625rem;@include box-shadow(0 0 0.15625rem rgba(0,0,0,.5));margin:0.625rem auto;width: 6.75rem;}\r\n.info-inner1{@include border-radius(0.15625rem);border: 1px dashed #fff;}\r\n.ipt{outline:none;padding:0.234375rem;\r\n    -webkit-appearance: none;\r\n    margin:0;\r\n    @include font-dpr(14px);background: #eb6766;border-radius:0.234375rem;color: #fff;text-align: center;padding:0.078125rem;box-shadow:0 0 0 0.09375rem #eb6766;border:1px dashed #fff;height: 1.0625rem;min-width: 1.75rem;\r\n}\r\n.jiang-type{font-size: 0.59375rem;margin:0 auto 0.390625rem auto;font-weight: bold;color: #fff}\r\n\r\n.welcome1{@include font-dpr(14px);color: #fff;line-height:1.09375rem;margin-bottom: 0.3125rem;}\r\n.chengdu-large-btn{margin-top:0.625rem;margin-bottom:0.46875rem;line-height:1.5625rem;height: 1.5625rem;width: 6.84375rem;@include font-dpr(14px);background: #3ac0c8;@include border-radius(0.15625rem);color: #fff;text-align: center;@include box-shadow(0 0 0.15625rem rgba(0,0,0,.5));position: relative;}\r\n.chengdu-large-btn:after{content: \"\";width: 6.5rem;height: 1.25rem;position: absolute;@include border-radius(0.15625rem);border: 1px dashed #fff;top:0.15625rem;left:0.171875rem; }\r\n.resault-ts-box{margin:0.3125rem 0.234375rem 0 0.234375rem;color: #fff;@include font-dpr(14px);}\r\n.strong-box{@include font-dpr(18px);color: #fee098;font-weight: bold;margin-left: 0.15625rem}\r\n.result-info-box{margin:0.234375rem;color: #fff;@include font-dpr(10px);}\r\n.chengdu-nomarl-btn{line-height: 1.0rem;height: 1.0rem;width: 4.71875rem;@include font-dpr(12px);background: #28557b;@include border-radius(0.15625rem);color: #fff;text-align: center;@include box-shadow(0 0 0.15625rem rgba(0,0,0,.5));}\r\n\r\n","@charset \"UTF-8\";\r\n//-----------------------------------------------------  \r\n// grid scss\r\n// 支持固定宽度和百分比宽度，可以控制是否输出span的class\r\n//----------------------------------------------------- \r\n\r\n// thanks:\r\n// http://www.blankwork.net/\r\n// http://semantic.gs/\r\n// http://heygrady.com/blog/2011/02/17/using-sass-with-the-1kb-grid-system/   \r\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/functions/_flex-grid.scss\r\n// http://bjorkoy.com/2010/05/css-grids-with-sass/\r\n\r\n// variables\r\n// 这里设计的是1000px的布局，每个栅格为65px，共12个，计算公式：(65+20)*12-20 = 1000\r\n// 如果将gridColumnWidth设置为60px，就是盛名的960网格系统\r\n//----------------------------------------------------- \r\n$gridColumns:                     12 !default;      // Total number of columns\r\n$gridColumnWidth:                 65px !default;   // Width of a single column\r\n$gridGutter:                      20px !default;     // Width of the gutter\r\n$gridSystemWidth:                 $gridColumns * ($gridColumnWidth + $gridGutter); //grid system width\r\n\r\n\r\n// percent layout setting\r\n// 百分比布局的变量设置\r\n//----------------------------------------------------- \r\n$gridPercentSwitch:               false !default; // 默认为固定宽度布局，设置为true为百分比\r\n$gridRealWidth:                   $gridSystemWidth !default;\r\n$gridGutterPercent:               percentage($gridGutter / $gridSystemWidth) !default;\r\n\r\n@if $gridPercentSwitch{\r\n  $gridRealWidth:                 100%;\r\n}\r\n\r\n// ie6/7 fluid layout bug: http://tylertate.com/blog/2012/01/05/subpixel-rounding.html\r\n// ie6/7  getWidth($i, true, $correction)\r\n$gridMinWidth:                    1000 !default;\r\n$gridCorrection:                  0.5 / $gridMinWidth * 100 * 1%;\r\n\r\n\r\n// margin value\r\n//----------------------------------------------------- \r\n// if fluid layout the value is $gridGutterPercent\r\n// if fixed layout the value is $gridGutter\r\n$gridMarginValue:                 if($gridPercentSwitch, $gridGutterPercent, $gridGutter) !default;\r\n\r\n\r\n// true for grid class(.span1, .span2...)\r\n// ----------------------------------------\r\n$gridSpanSwitch:                  false !default;\r\n\r\n\r\n// A Function to calculate width:\r\n// 这个函数几乎是blankwork的灵魂，用来计算宽度的\r\n// Example usage: (based on default values)\r\n// getWidth(3, false) would return 240px\r\n// getWidth(3) or getWidth(3, true) would return 220px;\r\n// and plain getWidth() or getWidth would return 940px;\r\n@function getWidth($i:$gridColumns, $onlyInnerWidth:true, $subtract:0){\r\n  // First set a default return value\r\n  $return: (($gridColumnWidth + $gridGutter) * $i / $gridSystemWidth) * $gridRealWidth - $subtract !default;\r\n\r\n  // If we want to get only the inner width (without gutter)\r\n  @if $onlyInnerWidth == true {\r\n    // Return the total calculated width, without the margins\r\n    // If the second parameter of this function is not specified\r\n    // This is what is going to be returned\r\n    $return: ((($gridColumnWidth + $gridGutter) * $i - $gridGutter) / $gridSystemWidth) * $gridRealWidth - $subtract;\r\n  }\r\n\r\n  @return $return;\r\n}\r\n\r\n\r\n// A Function to calculate percent width:\r\n// Example:getPercent(3,6)\r\n@function getPercent($i, $container-columns:$gridColumns, $onlyInnerWidth:false, $subtract:0) {\r\n  $percentage: percentage($i / $container-columns);\r\n  \r\n  @if $onlyInnerWidth == true {\r\n    $width: $i * $gridColumnWidth + ($i - 1) * $gridGutter;\r\n    $container-width: $container-columns * $gridColumnWidth + ($container-columns - 1) * $gridGutter;\r\n    $percentage: percentage($width / $container-width);\r\n  }\r\n  \r\n  @return $percentage - $subtract;\r\n}\r\n\r\n\r\n// span or column's gutter\r\n%margin-gutter{\r\n  margin-right: $gridMarginValue;\r\n\r\n  @if $gridPercentSwitch and $lte7{\r\n    *margin-right: $gridMarginValue - $gridCorrection;\r\n  }\r\n}\r\n\r\n// Column Mixin:\r\n// We're defining the default values as follows:\r\n// Default Column Count: Max Column Count\r\n// Padding (explained below): 0\r\n@mixin column($i: $gridColumns, $subtract:0){\r\n  @extend %float;\r\n  @extend %margin-gutter;\r\n\r\n  $getWidth: getWidth($i, true, $subtract); // Use the width calculation function to get the width \r\n  width: $getWidth;\r\n\r\n  @if $gridPercentSwitch and $lte7{\r\n    *width:$getWidth - $gridCorrection;\r\n  } \r\n}\r\n\r\n// wrapper\r\n// This typically is a main content wrapper, \r\n// But just in case someone finds an alternative use of this, \r\n// we shouldhave the flexibility\r\n// So wrapper( column count, center ?, subtract)\r\n@mixin wrapper($i: $gridColumns, $center:true, $subtract:0){\r\n  @extend %clearfix;\r\n  \r\n  // Because this is a wrapper, we don't need the outer gutter - we need the full width\r\n  $getWrapperWidth: getWidth($i, false);\r\n  // In case there is a need to subtract the wrapper\r\n  $wrapperWidth: $getWrapperWidth - $subtract;\r\n  width:$wrapperWidth;\r\n\r\n  // If we want the wrapper to be centered (by default we do)\r\n  @if $center == true {\r\n    margin-left:auto;\r\n    margin-right:auto;\r\n  }\r\n}\r\n\r\n\r\n// alpha & omega\r\n//----------------------------------------------------- \r\n@mixin alpha{\r\n  margin-left:0;\r\n}\r\n@mixin omega{\r\n  margin-right:0;\r\n}\r\n\r\n\r\n// prepend & append\r\n//----------------------------------------------------- \r\n@mixin prepend($i:1, $subtract:0){ \r\n  margin-left: getWidth($i,false,$subtract);\r\n} \r\n@mixin append($i:1, $subtract:0){ \r\n  margin-right: getWidth($i,false,$subtract);\r\n}\r\n\r\n\r\n// class span1-$gridColumns\r\n// span的class循环输出，通过变量$gridSpanSwitch来控制是否输出\r\n//-----------------------------------------------------  \r\n@if $gridSpanSwitch {\r\n  @for $i from 1 through $gridColumns {\r\n    .span#{$i} { \r\n      @extend %float-left;\r\n      @extend %margin-gutter;\r\n      \r\n      width:getWidth($i);\r\n      \r\n      @if $gridPercentSwitch and $lte7{\r\n        *width:getWidth($i) - $gridCorrection;\r\n      } \r\n    }\r\n  } \r\n}","@charset \"UTF-8\";\r\n//-----------------------------------------------------\r\n// css3 scss\r\n// thanks:\r\n// http://bourbon.io/\r\n// https://github.com/thomas-mcdonald/bootstrap-sass/blob/master/vendor/assets/stylesheets/bootstrap/_mixins.scss\r\n//-----------------------------------------------------\r\n\r\n\r\n// 各个浏览器的属性前缀，true表示开启，false表示不开启\r\n//-----------------------------------------------------\r\n$prefixForWebkit:             true !default;\r\n$prefixForMozilla:            true !default;\r\n$prefixForMicrosoft:          true !default;\r\n$prefixForOpera:              false !default; //opera从版本15开始转向webkit，所以默认为false，不输出o前缀\r\n$prefixNo:                    true !default;\r\n\r\n\r\n// prefixer\r\n// 用于在属性上加前缀\r\n// 默认这里将只输出webkit前缀和标准（如果要开启opera的可以将$prefixForOpera设置为true）\r\n//-----------------------------------------------------\r\n@mixin prefixer($property, $value, $prefixes: o webkit) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit and $prefixForWebkit == true {\r\n      -webkit-#{$property}: $value;\r\n    }\r\n    @else if $prefix == moz and $prefixForMozilla == true {\r\n      -moz-#{$property}: $value;\r\n    }\r\n    @else if $prefix == ms and $prefixForMicrosoft == true {\r\n      -ms-#{$property}: $value;\r\n    }\r\n    @else if $prefix == o and $prefixForOpera == true {\r\n      -o-#{$property}: $value;\r\n    }\r\n  }\r\n  @if $prefixNo {\r\n    #{$property}: $value;\r\n  }\r\n}\r\n\r\n// prefixer-value\r\n// 用于在值上加前缀\r\n// 默认这里将输出webkit前缀，moz前缀和标准\r\n@mixin prefixer-value($property, $value, $prefixes: webkit moz) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit and $prefixForWebkit == true {\r\n      #{$property}: -webkit-#{$value};\r\n    }\r\n    @else if $prefix == moz and $prefixForMozilla == true {\r\n      #{$property}: -moz-#{$value};\r\n    }\r\n    @else if $prefix == o and $prefixForMozilla == true {\r\n      #{$property}: -o-#{$value};\r\n    }\r\n    @else if $prefix == ms and $prefixForMicrosoft == true {\r\n      #{$property}: -ms-#{$value};\r\n    }\r\n  }\r\n  @if $prefixNo {\r\n    #{$property}: $value;\r\n  }\r\n}\r\n\r\n// disable prefix\r\n// 设置所有前缀和标准为false，用于@keyframes\r\n@mixin disable-prefix-for-all() {\r\n  $prefixForWebkit:      false;\r\n  $prefixForMozilla:     false;\r\n  $prefixForMicrosoft:   false;\r\n  $prefixForOpera:       false;\r\n  $prefixNo:             false;\r\n}\r\n\r\n// Return vendor-prefixed property names if appropriate\r\n// 将transition-property中的需要加前缀的属性添加相应的前缀，如transform\r\n// transitionPropertyNames((transform, color, background), moz) -> -moz-transform, color, background\r\n//-----------------------------------------------------\r\n@function transitionPropertyName($prop, $vendor: false) {\r\n  // put other properties that need to be prefixed here aswell\r\n  @if $vendor == webkit and $prefixForWebkit == true and $prop == transform {\r\n    @return unquote('-webkit-'+$prop);\r\n  }\r\n  @if $vendor == moz and $prefixForMozilla == true and $prop == transform {\r\n    @return unquote('-moz-'+$prop);\r\n  }\r\n  @if $vendor == o and $prefixForOpera == true and $prop == transform {\r\n    @return unquote('-o-'+$prop);\r\n  }\r\n  @else {\r\n    @return $prop;\r\n  }\r\n}\r\n\r\n@function transitionPropertyNames($props, $vendor: false) {\r\n  $new-props: ();\r\n  @each $prop in $props {\r\n    $new-props: append($new-props, transitionPropertyName($prop, $vendor), comma);\r\n  }\r\n  @return $new-props;\r\n}\r\n\r\n// Border Radius\r\n// 不建议使用\r\n//-----------------------------------------------------\r\n@mixin border-radius($radius: $baseRadius) {\r\n  // @include prefixer(border-radius, $radius, webkit);\r\n  border-radius:$radius;\r\n}\r\n\r\n// border-image\r\n// http://border-image.com/\r\n@mixin border-image($image){\r\n  @include prefixer(border-image, $image);\r\n}\r\n\r\n// box-sizing\r\n@mixin box-sizing($type: border-box) {\r\n  // border-box | padding-box | content-box\r\n  @include prefixer(box-sizing, $type, webkit moz o);\r\n}\r\n\r\n// box-shadow\r\n@mixin box-shadow($shadow...) {\r\n  @if length($shadow) >= 1 {\r\n    @include prefixer(box-shadow, $shadow);\r\n  } @else{\r\n    $shadow:0 0 4px rgba(0,0,0,.3);\r\n    @include prefixer(box-shadow, $shadow);\r\n  }\r\n}\r\n\r\n// appearance\r\n@mixin appearance($value) {\r\n  @include prefixer(appearance, $value, webkit moz);\r\n}\r\n\r\n// hyphens\r\n@mixin hyphens($value: auto) {\r\n  // none | manual | auto\r\n  @include prefixer(hyphens, $value, webkit moz);\r\n}\r\n\r\n// image-rendering\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering\r\n@mixin image-rendering($rendering: crisp-edges) {\r\n  @if $rendering == crisp-edges{\r\n    image-rendering: -moz-crisp-edges;         /* Firefox */\r\n    image-rendering: -webkit-optimize-contrast;/* Webkit (non-standard naming) */\r\n    image-rendering: crisp-edges;\r\n    -ms-interpolation-mode: nearest-neighbor;  \r\n  } @else {\r\n    @include prefixer-value(image-rendering, webkit moz);\r\n  }\r\n}\r\n\r\n// User select\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/user-select\r\n@mixin user-select($arg: text) {\r\n  // none | text | all | element\r\n  @include prefixer(user-select, $arg);\r\n}\r\n\r\n// http://www.css3files.com/font/\r\n// 1 The eot fontfile. Can be omitted if you don`t want to support Internet Explorer prior to version 9 (including semicolon).\r\n// 2 Can also be omitted for Internet Explorer < 9. ?iefix prevents IE6 from interpreting all of the following. If the whole IE family (6 to 9) should be supported, 1 and 2 are needed.\r\n// 3 Can be omitted if iPad versions prior to iOS 4.2 shouldn’t be supported. \r\n// 4 The ttf fontfile. Necessary to support (Mobile) Safari and Opera. \r\n// 5 The woff fontfile for all modern browsers (best choice).\r\n@mixin font-face($font-family, $file-path, $weight: normal, $style: normal ) {\r\n  @font-face {\r\n    font-family: $font-family;\r\n    font-weight: $weight;\r\n    font-style: $style;\r\n    src: url('#{$file-path}.eot'); // 1\r\n    src: url('#{$file-path}.eot?#iefix')               format('eot'), // 2\r\n         url('#{$file-path}.svg##{$font-family}')      format('svg'), // 3\r\n         url('#{$file-path}.woff')                     format('woff'), // 4\r\n         url('#{$file-path}.ttf')                      format('truetype'); //5\r\n  }\r\n}\r\n\r\n\r\n// Background-image\r\n//-----------------------------------------------------\r\n@mixin background-clip($clip) {\r\n  // border-box | padding-box | content-box\r\n  @if length($clip) >= 1 {\r\n    @include prefixer(background-clip, $clip, webkit);\r\n  } @else {\r\n    @include prefixer(background-clip, padding-box, webkit);\r\n  }\r\n}\r\n\r\n@mixin background-origin($origin...) {\r\n  // border-box | padding-box | content-box\r\n  @if length($origin) >= 1 {\r\n    @include prefixer(background-origin, $origin, webkit);\r\n  } @else {\r\n    @include prefixer(background-origin, border-box, webkit);\r\n  }\r\n}\r\n\r\n@mixin background-size($size...) {\r\n  // <length> | auto | cover | contain\r\n  @if length($origin) >= 1 {\r\n    @include prefixer(background-size, $size, webkit);\r\n  } @else {\r\n    @include prefixer(background-size, cover, webkit);\r\n  }\r\n}\r\n\r\n\r\n// Gradients\r\n// Firefox 10+, Opera 11.6+, Chrome 26+ and IE10 also support the new \"to (side)\" syntax.\r\n//-----------------------------------------------------\r\n// 水平渐变，从左往右\r\n// @include gradient-horizontal(#333, #ccc);\r\n@mixin gradient-horizontal($gradient...){\r\n  background-image: -webkit-linear-gradient(left, $gradient); // Safari 5.1+, Chrome 10+\r\n  background-image: -o-linear-gradient(left, $gradient); // Opera 11.10\r\n  background-image: linear-gradient(to right, $gradient); // Standard, IE10\r\n}\r\n// 水平渐变，从左往右，平铺\r\n// @include gradient-horizontal-repeating(#333 5%, #ccc 10%);\r\n@mixin gradient-horizontal-repeating($gradient...){\r\n  background-image: -webkit-repeating-linear-gradient(left, $gradient); // Safari 5.1+, Chrome 10+\r\n  background-image: -o-repeating-linear-gradient(left, $gradient); // Opera 11.10\r\n  background-image: repeating-linear-gradient(to right, $gradient); // Standard, IE10\r\n}\r\n// 垂直渐变，从上往下\r\n// @include gradient-vertical(#333 30%, #ccc);\r\n@mixin gradient-vertical($gradient...) {\r\n  background-image: -webkit-linear-gradient(top, $gradient); // Safari 5.1+, Chrome 10+\r\n  background-image: -o-linear-gradient(top, $gradient); // Opera 11.10\r\n  background-image: linear-gradient(to bottom, $gradient); // Standard, IE10\r\n}\r\n// 垂直渐变，从上往下，平铺\r\n// @include gradient-vertical-repeating(#333 30%, #ccc 50%);\r\n@mixin gradient-vertical($gradient...) {\r\n  background-image: -webkit-repeating-linear-gradient(top, $gradient); // Safari 5.1+, Chrome 10+\r\n  background-image: -o-repeating-linear-gradient(top, $gradient); // Opera 11.10\r\n  background-image: repeating-linear-gradient(to bottom, $gradient); // Standard, IE10\r\n}\r\n// 角度渐变\r\n// @include gradient-angle(45deg, #333 30%, #ccc);\r\n@mixin gradient-angle($gradient...) {\r\n  background-image: -webkit-linear-gradient($gradient); // Safari 5.1+, Chrome 10+\r\n  background-image: -o-linear-gradient($gradient); // Opera 11.10\r\n  background-image: linear-gradient($gradient); // Standard, IE1\r\n}\r\n// 角度渐变\r\n// @include gradient-angle(45deg, #333 30%, #ccc 50%);\r\n@mixin gradient-angle-repeating($gradient...) {\r\n  background-image: -webkit-repeating-linear-gradient($gradient); // Safari 5.1+, Chrome 10+\r\n  background-image: -o-repeating-linear-gradient($gradient); // Opera 11.10\r\n  background-image: repeating-linear-gradient($gradient); // Standard, IE1\r\n}\r\n// 径向渐变，可以写点简单的\r\n// 如：@include gradient-radial(#00F,#FFF);\r\n// 而@include gradient-radial(farthest-side circle at right,#00F,#FFF);这种的将不会兼容，所以不要调用这个，可以去找工具生成\r\n@mixin gradient-radial($gradient...){\r\n  background-image: -webkit-radial-gradient($gradient); // Safari 5.1+, Chrome 10+\r\n  background-image: -o-radial-gradient($gradient); // Opera 11.10\r\n  background-image: radial-gradient($gradient); // Standard, IE1\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n\r\n// Transform\r\n//-----------------------------------------------------\r\n@mixin transform($property...) {\r\n  @include prefixer(transform, $property);\r\n}\r\n\r\n@mixin transform-origin($axes) {\r\n  // x-axis - left | center | right  | length | %\r\n  // y-axis - top  | center | bottom | length | %\r\n  // z-axis -                          length\r\n  @include prefixer(transform-origin, $axes);\r\n}\r\n\r\n@mixin transform-style ($style: preserve-3d) {\r\n  // flat | preserve-3d\r\n  @include prefixer(transform-style, $style);\r\n}\r\n\r\n// Transformations\r\n//------------------------------------\r\n// rotate\r\n@mixin rotate($degrees...) {\r\n  @include prefixer(transform, rotate($degrees));\r\n}\r\n@mixin rotate3D($degrees...) {\r\n  @include prefixer(transform, rotate3D($degrees));\r\n}\r\n@mixin rotateX($degrees) {\r\n  @include prefixer(transform, rotateX($degrees));\r\n}\r\n@mixin rotateY($degrees) {\r\n  @include prefixer(transform, rotateY($degrees));\r\n}\r\n@mixin rotateZ($degrees) {\r\n  @include prefixer(transform, rotateZ($degrees) );\r\n}\r\n\r\n// scale\r\n@mixin scale($ratio...) {\r\n  @include prefixer(transform, scale($ratio));\r\n}\r\n@mixin scale3D($ratio...) {\r\n  @include prefixer(transform, scale3D($ratio));\r\n}\r\n@mixin scaleX($ratio) {\r\n  @include prefixer(transform, scaleX($ratio));\r\n}\r\n@mixin scaleY($ratio) {\r\n  @include prefixer(transform, scaleY($ratio));\r\n}\r\n@mixin scaleZ($ratio) {\r\n  @include prefixer(transform, scaleZ($ratio));\r\n}\r\n\r\n// translate\r\n@mixin translate($px...) {\r\n  @include prefixer(transform, translate($px));\r\n}\r\n@mixin translate3D($px...) {\r\n  @include prefixer(transform, translate3D($px));\r\n}\r\n@mixin translateX($px) {\r\n  @include prefixer(transform, translateX($px));\r\n}\r\n@mixin translateY($px) {\r\n  @include prefixer(transform, translateY($px));\r\n}\r\n@mixin translateZ($px) {\r\n  @include prefixer(transform, translateZ($px));\r\n}\r\n\r\n// skew\r\n// skew时一般会有锯齿什么的，解决方法是添加backface-visibility为hidden\r\n// 详见 https://github.com/twitter/bootstrap/issues/5319\r\n@mixin skew($degrees...) {\r\n  @include prefixer(transform, skew($degrees));\r\n  @include backface-visibility;\r\n}\r\n@mixin skewX($degrees) {\r\n  @include prefixer(transform, skewX($degrees));\r\n  @include backface-visibility;\r\n}\r\n@mixin skewY($degrees) {\r\n  @include prefixer(transform, skewY($degrees));\r\n  @include backface-visibility;\r\n}\r\n\r\n// matrix\r\n@mixin matrix($args...){\r\n  @include prefixer(transform, matrix($args));\r\n}\r\n@mixin matrix3D($args...){\r\n  @include prefixer(transform, matrix3D($args));\r\n}\r\n\r\n\r\n// perspective\r\n//-----------------------------------------------------\r\n@mixin perspective($depth: none) {\r\n  // none | <length>\r\n  @include prefixer(perspective, $depth);\r\n}\r\n\r\n@mixin perspective-origin($value: 50% 50%) {\r\n  // x-axis - left | center | right  | length | %\r\n  // y-axis - top  | center | bottom | length | %\r\n  @include prefixer(perspective-origin, $value);\r\n}\r\n\r\n@mixin backface-visibility($visibility:hidden){\r\n  // visible | hidden\r\n  @include prefixer(backface-visibility, $visibility);\r\n}\r\n\r\n\r\n// transition\r\n//-----------------------------------------------------\r\n@mixin transition($properties...) {\r\n  @if length($properties) >= 1 {\r\n    @include prefixer(transition, $properties);\r\n  }\r\n  @else {\r\n    $properties: all 0.3s ease;\r\n    @include prefixer(transition, $properties);\r\n  }\r\n}\r\n\r\n// 默认不提供moz的，如有需要请自行添加\r\n// -moz-transition-property: transitionPropertyNames($properties, moz);\r\n@mixin transition-property($properties...) {\r\n  -webkit-transition-property: transitionPropertyNames($properties, webkit);\r\n  @if $prefixForOpera {\r\n    -o-transition-property: transitionPropertyNames($properties, o);\r\n  }\r\n  transition-property: transitionPropertyNames($properties, false);\r\n}\r\n\r\n@mixin transition-duration($times...) {\r\n  @include prefixer(transition-duration, $times);\r\n}\r\n\r\n@mixin transition-timing-function($motions...) {\r\n  // timing-function\r\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function\r\n  @include prefixer(transition-timing-function, $motions);\r\n}\r\n\r\n@mixin transition-delay($times...) {\r\n  @include prefixer(transition-delay, $times);\r\n}\r\n\r\n\r\n// animation\r\n//-----------------------------------------------------\r\n@mixin animation ($animations...) {\r\n  @include prefixer(animation, $animations);\r\n}\r\n\r\n@mixin animation-name ($names...) {\r\n  @include prefixer(animation-name, $names);\r\n}\r\n\r\n@mixin animation-duration ($times...) {\r\n  @include prefixer(animation-duration, $times);\r\n}\r\n\r\n@mixin animation-timing-function ($motions...) {\r\n  // timing-function\r\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function\r\n  @include prefixer(animation-timing-function, $motions);\r\n}\r\n\r\n@mixin animation-delay ($times...) {\r\n  @include prefixer(animation-delay, $times);\r\n}\r\n\r\n@mixin animation-iteration-count ($values...) {\r\n  // infinite | <number>\r\n  @if length($values) >= 1 {\r\n    @include prefixer(animation-iteration-count, $values);\r\n  } @else {\r\n    @include prefixer(animation-iteration-count, infinite);\r\n  }\r\n}\r\n\r\n@mixin animation-direction ($directions...) {\r\n  // normal | alternate | reverse | alternate-reverse\r\n  @include prefixer(animation-direction, $directions);\r\n}\r\n\r\n@mixin animation-fill-mode ($modes...) {\r\n  // none | forwards | backwards | both\r\n  @if length($modes) >= 1 {\r\n    @include prefixer(animation-fill-mode, $modes);\r\n  } @else {\r\n    @include prefixer(animation-fill-mode, forwards);\r\n  }\r\n}\r\n\r\n@mixin animation-play-state ($states...) {\r\n  // running | paused\r\n  @if length($modes) >= 1 {\r\n    @include prefixer(animation-play-state, $states);\r\n  } @else {\r\n    @include prefixer(animation-play-state, paused);\r\n  }\r\n}\r\n\r\n// 在各自的@if判断里面，先禁用所有的前缀，然后开启对应的前缀\r\n// 最后输出标准的时候，直接禁用所有的前缀，开启标准\r\n@mixin keyframes($name, $prefixes: webkit o ) {\r\n  $originalPrefixForWebkit: $prefixForWebkit;\r\n  $originalPrefixForMozilla: $prefixForMozilla;\r\n  $originalPrefixForMicrosoft: $prefixForMicrosoft;\r\n  $originalPrefixForOpera: $prefixForOpera;\r\n  $originalPrefixNo: $prefixNo;\r\n  \r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit and $originalPrefixForWebkit == true {\r\n      @include disable-prefix-for-all();\r\n      $prefixForWebkit: true;\r\n      @-webkit-keyframes #{$name} {\r\n        @content;\r\n      }\r\n    }\r\n    @if $prefix == moz and $originalPrefixForMozilla == true {\r\n      @include disable-prefix-for-all();\r\n      $prefixForMozilla: true;\r\n      @-moz-keyframes #{$name} {\r\n        @content;\r\n      }\r\n    }\r\n    @if $prefix == ms and $originalPrefixForMicrosoft == true {\r\n      @include disable-prefix-for-all();\r\n      $prefixForMicrosoft: true;\r\n      @-ms-keyframes #{$name} {\r\n        @content;\r\n      }\r\n    }\r\n    @if $prefix == o and $originalPrefixForOpera == true {\r\n      @include disable-prefix-for-all();\r\n      $prefixForOpera: true;\r\n      @-o-keyframes #{$name} {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n\r\n  @include disable-prefix-for-all();\r\n  $prefixNo: true;\r\n  @keyframes #{$name} {\r\n    @content;\r\n  }\r\n\r\n  $prefixForWebkit:       $originalPrefixForWebkit;\r\n  $prefixForMozilla:      $originalPrefixForMozilla;\r\n  $prefixForMicrosoft:    $originalPrefixForMicrosoft;\r\n  $prefixForOpera:        $originalPrefixForOpera;\r\n  $prefixNo:              $originalPrefixNo;\r\n}\r\n\r\n// 为animate模块设计\r\n%animated {\r\n  @include animation-duration(1s);\r\n  @include animation-fill-mode(both);\r\n}\r\n\r\n\r\n//flex\r\n//-----------------------------------------------------\r\n@mixin display-flex($flex: flex) {\r\n  // flex | inline-flex\r\n  @include prefixer-value(display,$flex);\r\n}\r\n\r\n@mixin flex-direction($direction: column){\r\n  // row | row-reverse | column | column-reverse\r\n  @include prefixer(flex-direction, $direction, webkit moz);\r\n}\r\n\r\n@mixin flex-wrap($wrap: wrap){\r\n  // nowrap | wrap | wrap-reverse\r\n  @include prefixer(flex-wrap, $wrap, webkit moz);\r\n}\r\n\r\n// flex-flow is a shorthand for flex-direction and flex-wrap\r\n@mixin flex-flow($flow: row wrap){\r\n  // direction || wrap\r\n  @include prefixer(flex-flow, $flow, webkit moz);\r\n}\r\n\r\n@mixin order($num: -1){\r\n  @include prefixer(order, $num, webkit moz);\r\n}\r\n\r\n@mixin justify-content($align: space-between){\r\n  // flex-start | flex-end | center | space-between | space-around\r\n  @include prefixer(justify-content, $align, webkit moz);\r\n}\r\n\r\n@mixin align-items($align: center){\r\n  // flex-start | flex-end | center | baseline | stretch\r\n  @include prefixer(align-items, $align, webkit moz);\r\n}\r\n\r\n@mixin align-content($align: flex-start){\r\n  // stretch | flex-start | flex-end | center | space-between | space-around\r\n  @include prefixer(align-content, $align, webkit moz);\r\n}\r\n\r\n@mixin align-self($align: flex-start){\r\n  // auto | flex-start | flex-end | center | baseline | stretch\r\n  @include prefixer(align-self, $align, webkit moz);\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/flex\r\n@mixin flex($arg){\r\n  //initial | auto | none | number\r\n  @include prefixer(flex, $arg, webkit moz);\r\n}\r\n\r\n\r\n// mask\r\n// http://www.w3.org/TR/css-masking-1/\r\n// http://ued.ctrip.com/blog/wp-content/webkitcss/index.html\r\n// https://www.webkit.org/blog/181/css-masks/\r\n// mask (background)\r\n// mask-image (background-image)\r\n// mask-position (background-position)\r\n// mask-size (background-size)\r\n// mask-repeat (background-repeat)\r\n// mask-clip (background-clip)\r\n// mask-origin (background-origin)\r\n// mask-box-image (border-image)\r\n//-----------------------------------------------------\r\n@mixin mask($mask...){\r\n  @include prefixer(mask, $mask, webkit moz);\r\n}\r\n\r\n@mixin mask-image($image...){\r\n  @include prefixer(mask-image, $image, webkit moz);\r\n}\r\n\r\n@mixin mask-position($position...){\r\n  @include prefixer(mask-position, $position, webkit moz);\r\n}\r\n\r\n@mixin mask-repeat($repeat...){\r\n  @include prefixer(mask-repeat, $repeat, webkit moz);\r\n}\r\n\r\n@mixin mask-origin($origin...){\r\n  @include prefixer(mask-origin, $origin, webkit moz);\r\n}\r\n\r\n@mixin mask-clip($clip...){\r\n  @include prefixer(mask-clip, $clip, webkit moz);\r\n}\r\n\r\n@mixin mask-type($type: luminance){\r\n  @include prefixer(mask-type, $type, webkit moz);\r\n}\r\n\r\n@mixin mask-box-image($box){\r\n  @include prefixer(mask-box-image, $box, webkit moz);\r\n}\r\n\r\n\r\n// filter\r\n//-----------------------------------------------------\r\n@mixin filter($function...){\r\n  // <filter-function> [<filter-function>]* | none\r\n  @include prefixer(filter, $function, webkit moz);\r\n}\r\n\r\n@mixin filter-blur($px){\r\n  @include prefixer(filter, blur($px), webkit moz);\r\n}\r\n\r\n@mixin filter-grayscale($percent: 100%){\r\n  @include prefixer(filter, grayscale($percent), webkit moz);\r\n}\r\n\r\n@mixin filter-drop-shadow($shadow...){\r\n  @include prefixer(filter, drop-shadow($shadow), webkit moz);\r\n}\r\n\r\n// @include url(\"filepath\");\r\n@mixin filter-url($url){\r\n  @include prefixer(filter, url(#{$url}), webkit moz);\r\n}\r\n\r\n@mixin filter-brightness($value: 0.5){\r\n  @include prefixer(filter, brightness($value), webkit moz);\r\n}\r\n\r\n@mixin filter-contrast($value){\r\n  @include prefixer(filter, contrast($value), webkit moz);\r\n}\r\n\r\n@mixin filter-hue-rotate($value: 90deg){\r\n  @include prefixer(filter, hue-rotate($value), webkit moz);\r\n}\r\n\r\n@mixin filter-invert($value: 100%){\r\n  @include prefixer(filter, invert($value), webkit moz);\r\n}\r\n\r\n@mixin filter-opacity($value){\r\n  @include prefixer(filter, opacity($value), webkit moz);\r\n}\r\n\r\n@mixin filter-saturate($value){\r\n  @include prefixer(filter, saturate($value), webkit moz);\r\n}\r\n\r\n@mixin filter-sepia($value: 100%){\r\n  @include prefixer(filter, sepia($value), webkit moz);\r\n}\r\n\r\n\r\n//columns\r\n//-----------------------------------------------------\r\n@mixin columns($arg) {\r\n  // <column-count> || <column-width> || <column-count> && <column-width>\r\n  @include prefixer(columns, $arg, webkit moz);\r\n}\r\n\r\n@mixin column-count($int: auto) {\r\n  // auto | integer\r\n  @include prefixer(column-count, $int, webkit moz);\r\n}\r\n\r\n@mixin column-width($length: auto) {\r\n  // auto | length\r\n  @include prefixer(column-width, $length, webkit moz);\r\n}\r\n\r\n@mixin column-gap($length: normal) {\r\n  // normal | length\r\n  @include prefixer(column-gap, $length, webkit moz);\r\n}\r\n\r\n@mixin column-fill($arg: balance) {\r\n  // auto | balance\r\n  @include prefixer(columns-fill, $arg, webkit moz);\r\n}\r\n\r\n@mixin column-rule($arg: 1px solid $gray) {\r\n  // <border-width> || <border-style> || <color>\r\n  @include prefixer(column-rule, $arg, webkit moz);\r\n}\r\n\r\n@mixin column-rule-color($color) {\r\n  @include prefixer(column-rule-color, $color, webkit moz);\r\n}\r\n\r\n@mixin column-rule-style($style: none) {\r\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\r\n  @include prefixer(column-rule-style, $style, webkit moz);\r\n}\r\n\r\n@mixin column-rule-width ($width: none) {\r\n  @include prefixer(column-rule-width, $width, webkit moz);\r\n}\r\n\r\n@mixin column-span($arg: none) {\r\n  // none || all\r\n  @include prefixer(column-span, $arg, webkit moz);\r\n}\r\n\r\n\r\n// webkit\r\n//-----------------------------------------------------\r\n\r\n// text\r\n@mixin text-fill-color($color){\r\n  @include prefixer(text-fill-color, $color, webkit);\r\n}\r\n@mixin text-stroke-color($color){\r\n  @include prefixer(text-stroke-color, $color, webkit);\r\n}\r\n@mixin text-stroke-width($width){\r\n  @include prefixer(text-stroke-color, $width, webkit);\r\n}\r\n\r\n@mixin margin-collapse($value: collapse){\r\n  // collapse | separate\r\n  @include prefixer(margin-collapse, $value, webkit);\r\n}\r\n\r\n// https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-SW16\r\n@mixin box-reflect($reflect: below 1px){\r\n  // direction  offset  mask-box-image;\r\n  @include prefixer(box-reflect, $reflect, webkit);\r\n}"],"sourceRoot":"/source/"}